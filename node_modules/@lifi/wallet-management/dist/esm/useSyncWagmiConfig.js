import { ChainType } from '@lifi/sdk';
import { useEffect, useMemo } from 'react';
import { syncWagmiConfig } from './syncWagmiConfig.js';
import { convertExtendedChain, isExtendedChain, } from './utils/convertExtendedChain.js';
export const useSyncWagmiConfig = (wagmiConfig, connectors, chains) => {
    const _chains = useMemo(() => {
        const mappedChains = chains
            ?.map((chain) => isExtendedChain(chain)
            ? chain.chainType === ChainType.EVM
                ? convertExtendedChain(chain)
                : undefined
            : chain)
            .filter(Boolean);
        return mappedChains;
    }, [chains]);
    useEffect(() => {
        if (_chains?.length) {
            syncWagmiConfig(wagmiConfig, connectors, _chains);
        }
    }, [_chains, connectors, wagmiConfig]);
};
//# sourceMappingURL=useSyncWagmiConfig.js.map