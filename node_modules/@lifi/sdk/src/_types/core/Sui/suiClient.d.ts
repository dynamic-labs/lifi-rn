import { SuiClient } from '@mysten/sui/client';
/**
 * Initializes the Sui clients if they haven't been initialized yet.
 * @returns - Promise that resolves when clients are initialized.
 */
export declare const ensureClients: () => Promise<void>;
/**
 * Wrapper around getting the client (RPC provider) for Sui
 * @returns - Sui RPC clients
 */
export declare const getSuiClients: () => Promise<SuiClient[]>;
/**
 * Calls a function on the SuiClient instances with retry logic.
 * @param fn - The function to call, which receives a SuiClient instance.
 * @returns - The result of the function call.
 */
export declare function callSuiWithRetry<R>(fn: (client: SuiClient) => Promise<R>): Promise<R>;
//# sourceMappingURL=suiClient.d.ts.map