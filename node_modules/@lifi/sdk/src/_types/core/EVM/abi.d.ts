export declare const permit2ProxyAbi: readonly [{
    readonly name: "callDiamondWithPermit2";
    readonly type: "function";
    readonly stateMutability: "nonpayable";
    readonly inputs: readonly [{
        readonly type: "bytes";
    }, {
        readonly type: "tuple";
        readonly components: readonly [{
            readonly type: "tuple";
            readonly components: readonly [{
                readonly type: "address";
            }, {
                readonly type: "uint256";
            }];
        }, {
            readonly type: "uint256";
        }, {
            readonly type: "uint256";
        }];
    }, {
        readonly type: "bytes";
    }];
    readonly outputs: readonly [];
}, {
    readonly name: "callDiamondWithEIP2612Signature";
    readonly type: "function";
    readonly stateMutability: "payable";
    readonly inputs: readonly [{
        readonly type: "address";
    }, {
        readonly type: "uint256";
    }, {
        readonly type: "uint256";
    }, {
        readonly type: "uint8";
    }, {
        readonly type: "bytes32";
    }, {
        readonly type: "bytes32";
    }, {
        readonly type: "bytes";
    }];
    readonly outputs: readonly [];
}, {
    readonly name: "nextNonce";
    readonly type: "function";
    readonly stateMutability: "view";
    readonly inputs: readonly [{
        readonly type: "address";
    }];
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}, {
    readonly name: "callDiamondWithPermit2Witness";
    readonly type: "function";
    readonly stateMutability: "payable";
    readonly inputs: readonly [{
        readonly type: "bytes";
    }, {
        readonly type: "address";
    }, {
        readonly type: "tuple";
        readonly components: readonly [{
            readonly type: "tuple";
            readonly components: readonly [{
                readonly type: "address";
            }, {
                readonly type: "uint256";
            }];
        }, {
            readonly type: "uint256";
        }, {
            readonly type: "uint256";
        }];
    }, {
        readonly type: "bytes";
    }];
    readonly outputs: readonly [];
}];
export declare const eip2612Abi: readonly [{
    readonly name: "permit";
    readonly type: "function";
    readonly stateMutability: "nonpayable";
    readonly inputs: readonly [{
        readonly type: "address";
    }, {
        readonly type: "address";
    }, {
        readonly type: "uint256";
    }, {
        readonly type: "uint256";
    }, {
        readonly type: "uint8";
    }, {
        readonly type: "bytes32";
    }, {
        readonly type: "bytes32";
    }];
    readonly outputs: readonly [];
}, {
    readonly name: "DOMAIN_SEPARATOR";
    readonly type: "function";
    readonly stateMutability: "view";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly type: "bytes32";
    }];
}, {
    readonly name: "nonces";
    readonly type: "function";
    readonly stateMutability: "view";
    readonly inputs: readonly [{
        readonly type: "address";
    }];
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}, {
    readonly name: "name";
    readonly type: "function";
    readonly stateMutability: "view";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly type: "string";
    }];
}, {
    readonly name: "version";
    readonly type: "function";
    readonly stateMutability: "view";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly type: "string";
    }];
}, {
    readonly name: "PERMIT_TYPEHASH";
    readonly type: "function";
    readonly stateMutability: "view";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly type: "bytes32";
    }];
}];
export declare const approveAbi: readonly [{
    readonly name: "approve";
    readonly type: "function";
    readonly stateMutability: "nonpayable";
    readonly inputs: readonly [{
        readonly type: "address";
    }, {
        readonly type: "uint256";
    }];
    readonly outputs: readonly [{
        readonly type: "bool";
    }];
}];
export declare const allowanceAbi: readonly [{
    readonly name: "allowance";
    readonly type: "function";
    readonly stateMutability: "view";
    readonly inputs: readonly [{
        readonly type: "address";
    }, {
        readonly type: "address";
    }];
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}];
export declare const getEthBalanceAbi: readonly [{
    readonly name: "getEthBalance";
    readonly type: "function";
    readonly stateMutability: "view";
    readonly inputs: readonly [{
        readonly type: "address";
    }];
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}];
export declare const balanceOfAbi: readonly [{
    readonly name: "balanceOf";
    readonly type: "function";
    readonly stateMutability: "view";
    readonly inputs: readonly [{
        readonly type: "address";
    }];
    readonly outputs: readonly [{
        readonly type: "uint256";
    }];
}];
//# sourceMappingURL=abi.d.ts.map