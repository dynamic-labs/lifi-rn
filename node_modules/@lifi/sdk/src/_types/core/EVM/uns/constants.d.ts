import { ChainId, ChainType } from '@lifi/types';
import type { Address } from 'viem';
export declare const UNS_PROXY_READER_ADDRESSES: Record<number, Address>;
export declare const getUNSProxyAddress: (chainId: number) => Address | undefined;
export declare const UNSProxyReaderABI: readonly [{
    readonly constant: true;
    readonly inputs: readonly [{
        readonly internalType: "string[]";
        readonly name: "keys";
        readonly type: "string[]";
    }, {
        readonly internalType: "uint256";
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
    readonly name: "getData";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "resolver";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "owner";
        readonly type: "address";
    }, {
        readonly internalType: "string[]";
        readonly name: "values";
        readonly type: "string[]";
    }];
    readonly payable: false;
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "tokenId";
        readonly type: "uint256";
    }];
    readonly name: "exists";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
export declare const CHAIN_TYPE_UNS_CHAIN_MAP: Record<ChainType, string>;
export declare const CHAIN_ID_UNS_CHAIN_MAP: Partial<Record<ChainId, string>>;
export declare const CHAIN_TYPE_FAMILY_MAP: Record<ChainType, string>;
//# sourceMappingURL=constants.d.ts.map