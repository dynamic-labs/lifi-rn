import type { Address, Client } from 'viem';
import type { NativePermitData } from './types.js';
export type GetNativePermitParams = {
    chainId: number;
    tokenAddress: Address;
    spenderAddress: Address;
    amount: bigint;
};
export declare const getContractData: (client: Client, chainId: number, tokenAddress: Address) => Promise<{
    name: string;
    domainSeparator: `0x${string}`;
    permitTypehash: `0x${string}` | undefined;
    nonce: bigint;
    version: string;
} | undefined>;
/**
 * Retrieves native permit data (EIP-2612) for a token on a specific chain
 * @link https://eips.ethereum.org/EIPS/eip-2612
 * @param client - The Viem client instance
 * @param chain - The extended chain object containing chain details
 * @param tokenAddress - The address of the token to check for permit support
 * @returns {Promise<NativePermitData>} Object containing permit data including name, version, nonce and support status
 */
export declare const getNativePermit: (client: Client, { chainId, tokenAddress, spenderAddress, amount }: GetNativePermitParams) => Promise<NativePermitData | undefined>;
//# sourceMappingURL=getNativePermit.d.ts.map