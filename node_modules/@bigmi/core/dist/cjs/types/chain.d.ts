export type Chain<formatters extends ChainFormatters | undefined = ChainFormatters | undefined, custom extends Record<string, unknown> | undefined = Record<string, unknown> | undefined> = {
    blockExplorers?: {
        [key: string]: ChainBlockExplorer;
        default: ChainBlockExplorer;
    } | undefined;
    id: number;
    name: string;
    rpcUrls: {
        [key: string]: ChainRpcUrls;
        default: ChainRpcUrls;
    };
    testnet?: boolean | undefined;
} & ChainConfig<formatters, custom>;
export type ChainConfig<formatters extends ChainFormatters | undefined = ChainFormatters | undefined, custom extends Record<string, unknown> | undefined = Record<string, unknown> | undefined> = {
    custom?: custom | undefined;
    formatters?: formatters | undefined;
};
export type ChainFormatters = {
    block?: ChainFormatter<'block'> | undefined;
    transaction?: ChainFormatter<'transaction'> | undefined;
    transactionReceipt?: ChainFormatter<'transactionReceipt'> | undefined;
    transactionRequest?: ChainFormatter<'transactionRequest'> | undefined;
};
export type ChainFormatter<type extends string = string> = {
    format: (args: any) => any;
    type: type;
};
type ChainBlockExplorer = {
    name: string;
    url: string;
    apiUrl?: string | undefined;
};
type ChainRpcUrls = {
    http: readonly string[];
    webSocket?: readonly string[] | undefined;
};
export {};
