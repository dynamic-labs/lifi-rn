import '../modules/auth/state';
import '../modules/initializeClient/state';
import '../modules/mfa/state';
import '../modules/projectSettings/state';
import '../modules/wallets/unverifiedWalletAccounts/state';
import '../modules/auth/events';
import '../modules/mfa/events';
import '../modules/state/raiseStateEvents/events';
import '../modules/wallets/walletAccount/events';
import '../modules/wallets/walletProviderRegistry/events';
export type { CreateMfaToken } from '@dynamic-labs/sdk-api-core';
export type { DynamicCoreConfig } from '../client/core/types';
export { createDynamicClient } from '../client/createDynamicClient';
export type { DynamicClient, DynamicClientConfig } from '../client/types';
export { BaseError } from '../errors/base';
export { ClientAlreadyInitializedError } from '../errors/ClientAlreadyInitializedError';
export { InvalidRedirectStorageStateError } from '../errors/InvalidRedirectStorageStateError';
export { MfaInvalidOtpError } from '../errors/MfaInvalidOtpError';
export { MfaRateLimitedError } from '../errors/MfaRateLimitedError';
export { MissingRedirectStorageStateError } from '../errors/MissingRedirectStorageStateError';
export { MissingSocialUrlParamError } from '../errors/MissingSocialUrlParamError';
export { NoAddressFoundError } from '../errors/NoAddressFoundError';
export { NoPasskeyCredentialsFoundError } from '../errors/NoPasskeyCredentialsFoundError';
export { NoWebAuthNSupportError } from '../errors/NoWebAuthNSupportError';
export { UnavailableInServerSideError } from '../errors/UnavailableInServerSideError';
export { UserNotAuthenticatedError } from '../errors/UserNotAuthenticatedError';
export { WalletAccountAlreadyVerifiedError } from '../errors/WalletAccountAlreadyVerifiedError';
export { WalletAccountNotSelectedError } from '../errors/WalletAccountNotSelectedError';
export { WalletAlreadyLinkedToAnotherUserError } from '../errors/WalletAlreadyLinkedToAnotherUserError';
export { isSignedIn } from '../modules/auth/isSignedIn';
export { logout } from '../modules/auth/logout';
export { getPasskeyAuthenticationOptions } from '../modules/auth/passkeys/getPasskeyAuthenticationOptions';
export type { PublicKeyCredentialRequestOptionsJSON } from '../modules/auth/passkeys/getPasskeyAuthenticationOptions';
export { getPasskeys } from '../modules/auth/passkeys/getPasskeys';
export { registerPasskey } from '../modules/auth/passkeys/registerPasskey';
export { signInWithPasskey } from '../modules/auth/passkeys/signInWithPasskey';
export { completeSocialRedirectSignIn } from '../modules/auth/social/oauth/completeSocialRedirectSignIn';
export { detectOAuthRedirect } from '../modules/auth/social/oauth/detectOAuthRedirect';
export { signInWithSocialRedirect } from '../modules/auth/social/oauth/signInWithSocialRedirect';
export type { SocialProvider } from '../modules/auth/social/oauth/signInWithSocialRedirect';
export { getMultichainBalances } from '../modules/balances/getMultichainBalances/getMultichainBalances';
export type { Chain } from '../modules/chain';
export { offEvent, onceEvent, onEvent } from '../modules/events';
export { hasExtension } from '../modules/extension/hasExtension';
export { initializeClient } from '../modules/initializeClient';
export type { DynamicInitStatus } from '../modules/initializeClient/state';
export { acknowledgeRecoveryCodes } from '../modules/mfa/acknowledgeRecoveryCodes';
export { authenticatePasskeyMFA } from '../modules/mfa/authenticatePasskeyMFA';
export { authMfaRecoveryCode } from '../modules/mfa/authMfaRecoveryCode';
export { authTotpMfaDevice } from '../modules/mfa/authTotpMfaDevice';
export { consumeMfaToken } from '../modules/mfa/consumeMfaToken';
export { createNewMfaRecoveryCodes } from '../modules/mfa/createNewMfaRecoveryCodes';
export { deleteMfaDevice } from '../modules/mfa/deleteMfaDevice';
export { getMfaDevices } from '../modules/mfa/getMfaDevices';
export { getMfaMethods } from '../modules/mfa/getMfaMethods';
export { getMfaRecoveryCodes } from '../modules/mfa/getMfaRecoveryCodes';
export { isPendingRecoveryCodesAcknowledgment } from '../modules/mfa/isPendingRecoveryCodesAcknowledgment';
export { isUserMissingMfaAuth } from '../modules/mfa/isUserMissingMfaAuth';
export { registerTotpMfaDevice } from '../modules/mfa/registerTotpMfaDevice';
export { setDefaultMfaDevice } from '../modules/mfa/setDefaultMfaDevice';
export type { MFADevice } from '../modules/mfa/types';
export { sendEmailOTP } from '../modules/otp/sendEmailOTP';
export { sendSmsOTP } from '../modules/otp/sendSmsOTP';
export type { OTPVerification } from '../modules/otp/types';
export { verifyOTP } from '../modules/otp/verifyOTP';
export { fetchProjectSettings } from '../modules/projectSettings/fetchProjectSettings';
export type { UpdateUserFields } from '../modules/user/types';
export { updateUser } from '../modules/user/updateUser';
export { assertWalletAccountSigningAvailability } from '../modules/wallets/assertWalletAccountSigningAvailability';
export { connectWithWalletProvider } from '../modules/wallets/connectWithWalletProvider';
export { getWalletAccounts } from '../modules/wallets/getWalletAccounts';
export { getWalletProviders } from '../modules/wallets/getWalletProviders';
export { getPrimaryWalletAccount } from '../modules/wallets/primaryWalletAccount/getPrimaryWalletAccount';
export { selectPrimaryWalletAccount } from '../modules/wallets/primaryWalletAccount/selectPrimaryWalletAccount';
export { removeWalletAccount } from '../modules/wallets/removeWalletAccount';
export { signMessage } from '../modules/wallets/signMessage';
export { verifyWalletAccount } from '../modules/wallets/verifyWalletAccount';
export type { WalletAccount } from '../modules/wallets/walletAccount';
export type { WalletProvider } from '../modules/wallets/walletProvider';
//# sourceMappingURL=index.d.ts.map