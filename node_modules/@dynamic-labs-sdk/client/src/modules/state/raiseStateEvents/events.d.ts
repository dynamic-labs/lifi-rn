import type { DynamicClient } from '../../../client/types';
/**
 * Maps the state keys to the event names.
 *
 * This is mainly to ensure that whenever a new state key is added, the developer
 * will have to come to this file and remember to add it here and in the interface.
 */
export declare const stateChangeEvents: {
    initStatus: "initStatusChanged";
    mfaToken: "mfaTokenChanged";
    projectSettings: "projectSettingsChanged";
    token: "tokenChanged";
    user: "userChanged";
};
declare global {
    interface DynamicEvents {
        initStatusChanged: (value: DynamicClient['initStatus'], previous: DynamicClient['initStatus']) => void;
        mfaTokenChanged: (value: DynamicClient['mfaToken'], previous: DynamicClient['mfaToken']) => void;
        projectSettingsChanged: (value: DynamicClient['projectSettings'], previous: DynamicClient['projectSettings']) => void;
        tokenChanged: (value: DynamicClient['token'], previous: DynamicClient['token']) => void;
        userChanged: (value: DynamicClient['user'], previous: DynamicClient['user']) => void;
    }
}
//# sourceMappingURL=events.d.ts.map