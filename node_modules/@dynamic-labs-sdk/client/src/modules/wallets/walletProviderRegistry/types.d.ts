import type { WalletProvider } from '../walletProvider/types';
export declare enum WalletProviderPriority {
    /**
     * Highest priority should be used by wallet providers that implement
     * the most reliable wallet integration.
     * example: The SDK provided by the wallet provider.
     */
    WALLET_SDK = 100,
    /**
     * Medium priority should be used by wallet providers that implement
     * a wallet integration via some reliable standard.
     * example: A wallet provider that uses EIP6963 announcement.
     */
    WALLET_SELF_ANNOUNCEMENT_STANDARD = 50,
    /**
     * Low priority should be used by wallet providers that implement
     * a wallet integration on a less reliable standard.
     * example: A wallet provider that uses window.ethereum, where the
     * window key can be overridden by other extensions.
     */
    WINDOW_INJECT = 20
}
export type WalletProviderRegistry = {
    getByKey: (key: string) => WalletProvider | undefined;
    listProviders: () => WalletProvider[];
    register: (args: {
        priority: WalletProviderPriority;
        walletProvider: WalletProvider;
    }) => void;
};
//# sourceMappingURL=types.d.ts.map