'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var runtime = require('../runtime.cjs');

/* tslint:disable */
function WalletKeyShareInfoWithEncryptedAccountCredentialFromJSON(json) {
    return WalletKeyShareInfoWithEncryptedAccountCredentialFromJSONTyped(json);
}
function WalletKeyShareInfoWithEncryptedAccountCredentialFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'backupLocation': json['backupLocation'],
        'passwordEncrypted': json['passwordEncrypted'],
        'encryptedAccountCredential': !runtime.exists(json, 'encryptedAccountCredential') ? undefined : json['encryptedAccountCredential'],
    };
}
function WalletKeyShareInfoWithEncryptedAccountCredentialToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'backupLocation': value.backupLocation,
        'passwordEncrypted': value.passwordEncrypted,
        'encryptedAccountCredential': value.encryptedAccountCredential,
    };
}

exports.WalletKeyShareInfoWithEncryptedAccountCredentialFromJSON = WalletKeyShareInfoWithEncryptedAccountCredentialFromJSON;
exports.WalletKeyShareInfoWithEncryptedAccountCredentialFromJSONTyped = WalletKeyShareInfoWithEncryptedAccountCredentialFromJSONTyped;
exports.WalletKeyShareInfoWithEncryptedAccountCredentialToJSON = WalletKeyShareInfoWithEncryptedAccountCredentialToJSON;
