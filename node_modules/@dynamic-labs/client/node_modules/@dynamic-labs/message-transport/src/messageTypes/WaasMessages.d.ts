export type ImportPrivateKeyArgs = {
    privateKey: string;
    thresholdSignatureScheme?: string;
};
export type ExportClientKeysharesArgs = {
    accountAddress: string;
    password?: string;
};
export type BackupKeySharesToGoogleDriveArgs = {
    accountAddress: string;
    password?: string;
};
export type DelegateKeySharesArgs = {
    accountAddress: string;
    password?: string;
};
export type RefreshWalletAccountSharesArgs = {
    accountAddress: string;
    password?: string;
};
export type UpdatePasswordArgs = {
    accountAddress: string;
    existingPassword: string;
    newPassword: string;
};
export type SignRawMessageArgs = {
    accountAddress: string;
    message: string;
    password?: string;
};
export type WaasMessages = {
    waas_importPrivateKey: (walletId: string, args: ImportPrivateKeyArgs) => Promise<void>;
    waas_exportClientKeyshares: (walletId: string, args: ExportClientKeysharesArgs) => Promise<void>;
    waas_backupKeySharesToGoogleDrive: (walletId: string, args: BackupKeySharesToGoogleDriveArgs) => Promise<void>;
    waas_delegateKeyShares: (walletId: string, args: DelegateKeySharesArgs) => Promise<void>;
    waas_refreshWalletAccountShares: (walletId: string, args: RefreshWalletAccountSharesArgs) => Promise<void>;
    waas_updatePassword: (walletId: string, args: UpdatePasswordArgs) => Promise<void>;
    waas_signRawMessage: (walletId: string, args: SignRawMessageArgs) => Promise<string>;
};
