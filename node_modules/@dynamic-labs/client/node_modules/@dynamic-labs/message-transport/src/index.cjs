'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var assertPackageVersion = require('@dynamic-labs/assert-package-version');
var _package = require('../package.cjs');
var messageTransport = require('./messageTransport/messageTransport.cjs');
var applyDefaultMessageOrigin = require('./messageTransport/decorators/applyDefaultMessageOrigin/applyDefaultMessageOrigin.cjs');
var applyRecoveryManager = require('./messageTransport/decorators/applyRecoveryManager/applyRecoveryManager.cjs');
var applyTransportStamps = require('./messageTransport/decorators/applyTransportStamps/applyTransportStamps.cjs');
var makeWaitForInitEvent = require('./messageTransport/decorators/makeWaitForInitEvent/makeWaitForInitEvent.cjs');
var makeWaitForUnblock = require('./messageTransport/decorators/makeWaitForUnblock/makeWaitForUnblock.cjs');
var requestChannel = require('./requestChannel/requestChannel.cjs');
var utils = require('./requestChannel/utils/utils.cjs');
var isSerializedError = require('./utils/isSerializedError/isSerializedError.cjs');
var parseErrorFromTransport = require('./utils/parseErrorFromTransport/parseErrorFromTransport.cjs');
var parseMessageTransportData = require('./utils/parseMessageTransportData/parseMessageTransportData.cjs');
var serializeErrorForTransport = require('./utils/serializeErrorForTransport/serializeErrorForTransport.cjs');
var createEventEmitterForMessages = require('./store/createEventEmitterForMessages/createEventEmitterForMessages.cjs');
var store = require('./store/store.cjs');
var storeSetter = require('./store/storeSetter/storeSetter.cjs');
var AuthModuleMessages = require('./messageTypes/AuthModuleMessages.cjs');
var EmbeddedWalletsModuleMessages = require('./messageTypes/EmbeddedWalletsModuleMessages.cjs');
var OtpMessages = require('./messageTypes/OtpMessages.cjs');
var SdkModuleMessages = require('./messageTypes/SdkModuleMessages.cjs');
var UserInterfaceModuleMessages = require('./messageTypes/UserInterfaceModuleMessages.cjs');
var WalletsModuleMessages = require('./messageTypes/WalletsModuleMessages.cjs');
var debug = require('./debug/debug.cjs');
var messageTransportDataJsonReplacer = require('./messageTransportDataJson/messageTransportDataJsonReplacer.cjs');
var messageTransportDataJsonReviver = require('./messageTransportDataJson/messageTransportDataJsonReviver.cjs');

assertPackageVersion.assertPackageVersion('@dynamic-labs/message-transport', _package.version);

exports.createMessageTransport = messageTransport.createMessageTransport;
exports.applyDefaultMessageOrigin = applyDefaultMessageOrigin.applyDefaultMessageOrigin;
exports.applyRecoveryManager = applyRecoveryManager.applyRecoveryManager;
exports.hasRecoveryManager = applyRecoveryManager.hasRecoveryManager;
exports.applyTransportStamps = applyTransportStamps.applyTransportStamps;
exports.makeWaitForInitEvent = makeWaitForInitEvent.makeWaitForInitEvent;
exports.makeWaitForUnblock = makeWaitForUnblock.makeWaitForUnblock;
exports.createRequestChannel = requestChannel.createRequestChannel;
exports.getAckMessageType = utils.getAckMessageType;
exports.getRejectMessageType = utils.getRejectMessageType;
exports.getResolveMessageType = utils.getResolveMessageType;
exports.isAckMessageType = utils.isAckMessageType;
exports.isRejectMessageType = utils.isRejectMessageType;
exports.isRequestMessageType = utils.isRequestMessageType;
exports.isResolveMessageType = utils.isResolveMessageType;
exports.isSerializedError = isSerializedError.isSerializedError;
exports.parseErrorFromTransport = parseErrorFromTransport.parseErrorFromTransport;
exports.parseMessageTransportData = parseMessageTransportData.parseMessageTransportData;
exports.serializeErrorForTransport = serializeErrorForTransport.serializeErrorForTransport;
exports.createEventEmitterForMessages = createEventEmitterForMessages.createEventEmitterForMessages;
exports.createStore = store.createStore;
exports.createStoreSetter = storeSetter.createStoreSetter;
exports.authEventNames = AuthModuleMessages.authEventNames;
exports.embeddedWalletsEventNames = EmbeddedWalletsModuleMessages.embeddedWalletsEventNames;
exports.emailEventNames = OtpMessages.emailEventNames;
exports.smsEventNames = OtpMessages.smsEventNames;
exports.sdkHasLoadedEventName = SdkModuleMessages.sdkHasLoadedEventName;
exports.userInterfaceEventNames = UserInterfaceModuleMessages.userInterfaceEventNames;
exports.userWalletsEventNames = WalletsModuleMessages.userWalletsEventNames;
exports.isGlobalDebugEnabled = debug.isGlobalDebugEnabled;
exports.setGlobalDebugEnabled = debug.setGlobalDebugEnabled;
exports.messageTransportDataJsonReplacer = messageTransportDataJsonReplacer.messageTransportDataJsonReplacer;
exports.messageTransportDataJsonReviver = messageTransportDataJsonReviver.messageTransportDataJsonReviver;
