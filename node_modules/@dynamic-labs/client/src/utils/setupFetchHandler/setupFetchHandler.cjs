'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../_virtual/_tslib.cjs');
var messageTransport = require('@dynamic-labs/message-transport');
var logger = require('../logger/logger.cjs');

const setupFetchHandler = (core) => {
    const fetchRequestChannel = messageTransport.createRequestChannel(core.messageTransport);
    fetchRequestChannel.handle('fetch', (input, init) => _tslib.__awaiter(void 0, void 0, void 0, function* () {
        try {
            const response = yield fetch(input, init);
            const responseBody = yield response.text();
            return {
                body: responseBody,
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                headers: Object.fromEntries(response.headers.entries()),
                status: response.status,
                statusText: response.statusText,
            };
        }
        catch (error) {
            logger.logger.error('Fetch request failed in setupFetchHandler', {
                error: error instanceof Error ? error.message : String(error),
                input: typeof input === 'string' ? input : input.url,
                method: (init === null || init === void 0 ? void 0 : init.method) || 'GET',
                stack: error instanceof Error ? error.stack : undefined,
            });
            throw error;
        }
    }));
};

exports.setupFetchHandler = setupFetchHandler;
