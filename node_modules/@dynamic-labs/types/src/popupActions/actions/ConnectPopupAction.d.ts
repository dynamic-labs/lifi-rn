import { Provider } from '@dynamic-labs/sdk-api-core';
import { BaseWallet } from '../../wallets';
export type ConnectEncryptedData = {
    wallets: BaseWallet[];
    ethereum: {
        currentNetworkId: number;
        /**
         * The key is the smart wallet address
         * The value is the eoa wallet
         */
        eoaWallets: Record<string, BaseWallet>;
        supportedNetworks: {
            chainId: number;
            rpcUrl: string;
        }[];
    } | null;
    solana: {
        currentNetwork: string;
    } | null;
    settings: {
        zeroDevSettings?: Partial<Provider>;
    };
};
export type ConnectPopupActionArgs = {
    receiver_public_key: string;
};
export type ConnectPopupActionResponse = {
    connectionId: string | undefined;
    expiresAt: number;
    encryptedMessage: string;
    iv: string;
    providerPublicKey: string;
};
export type ConnectPopupAction = {
    name: 'connect';
    func: (args: ConnectPopupActionArgs) => Promise<ConnectPopupActionResponse>;
};
