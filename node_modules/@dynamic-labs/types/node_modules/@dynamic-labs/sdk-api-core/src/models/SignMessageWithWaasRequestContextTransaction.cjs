'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var runtime = require('../runtime.cjs');

/* tslint:disable */
function SignMessageWithWaasRequestContextTransactionFromJSON(json) {
    return SignMessageWithWaasRequestContextTransactionFromJSONTyped(json);
}
function SignMessageWithWaasRequestContextTransactionFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'to': !runtime.exists(json, 'to') ? undefined : json['to'],
        'chain': !runtime.exists(json, 'chain') ? undefined : json['chain'],
        'data': !runtime.exists(json, 'data') ? undefined : json['data'],
        'gas': !runtime.exists(json, 'gas') ? undefined : json['gas'],
        'gasPrice': !runtime.exists(json, 'gasPrice') ? undefined : json['gasPrice'],
        'maxFeePerGas': !runtime.exists(json, 'maxFeePerGas') ? undefined : json['maxFeePerGas'],
        'maxPriorityFeePerGas': !runtime.exists(json, 'maxPriorityFeePerGas') ? undefined : json['maxPriorityFeePerGas'],
        'nonce': !runtime.exists(json, 'nonce') ? undefined : json['nonce'],
        'value': !runtime.exists(json, 'value') ? undefined : json['value'],
    };
}
function SignMessageWithWaasRequestContextTransactionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'to': value.to,
        'chain': value.chain,
        'data': value.data,
        'gas': value.gas,
        'gasPrice': value.gasPrice,
        'maxFeePerGas': value.maxFeePerGas,
        'maxPriorityFeePerGas': value.maxPriorityFeePerGas,
        'nonce': value.nonce,
        'value': value.value,
    };
}

exports.SignMessageWithWaasRequestContextTransactionFromJSON = SignMessageWithWaasRequestContextTransactionFromJSON;
exports.SignMessageWithWaasRequestContextTransactionFromJSONTyped = SignMessageWithWaasRequestContextTransactionFromJSONTyped;
exports.SignMessageWithWaasRequestContextTransactionToJSON = SignMessageWithWaasRequestContextTransactionToJSON;
