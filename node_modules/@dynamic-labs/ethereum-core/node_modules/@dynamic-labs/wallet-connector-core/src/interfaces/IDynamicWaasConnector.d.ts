import { WalletConnectorBase } from '..';
export interface IDynamicWaasConnector extends WalletConnectorBase {
    createWalletAccount(options?: {
        thresholdSignatureScheme: string;
    }): Promise<{
        accountAddress: string;
        rawPublicKey: Uint8Array;
        clientKeyShares: string[];
        publicKeyHex?: string;
    }>;
    importPrivateKey({ privateKey, chainName, thresholdSignatureScheme, }: {
        privateKey: string;
        chainName: string;
        thresholdSignatureScheme?: string;
    }): Promise<void>;
    exportPrivateKey({ accountAddress, displayContainer, }: {
        accountAddress: string;
        displayContainer?: HTMLIFrameElement;
    }): Promise<void>;
    setEnvironmentId(environmentId: string): void;
    setBaseApiUrl(baseApiUrl: string): void;
    setGetAuthTokenFunction(getAuthToken: () => string): void;
    setRelayUrl(relayUrl: string): void;
    getWalletClientByAddress({ accountAddress }: {
        accountAddress: string;
    }): any;
    getWaasWalletClient(): any;
    exportClientKeyshares({ accountAddress, }: {
        accountAddress: string;
    }): Promise<void>;
}
