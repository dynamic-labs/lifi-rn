import { EcdsaValidatorOptions, ProviderEntryPointVersionEnum, ProviderKernelVersionEnum, SmartWalletProperties } from '@dynamic-labs/sdk-api-core';
import { ISendBalanceWalletConnector } from '../interfaces/ISendBalanceWalletConnector';
import { WalletConnector, WalletConnectorBase, InternalWalletConnector } from '../WalletConnectorBase';
type GetAccountAbstractionProviderProps = {
    withSponsorship?: boolean;
};
export type IZeroDevConnector = IAccountAbstractionWalletConnector & ISendBalanceWalletConnector & {
    getCurrentUserOperation(transaction: {
        from?: string;
        to?: string;
        value?: bigint;
        data?: string;
    }): Promise<{
        userOperation: any;
        sponsored: boolean;
    }>;
    formatUserOperation(userOperation: unknown): Promise<any>;
    registerEoa({ smartWalletAddress, eoaAddress, eoaConnector, shouldSetEoaConnector, ecdsaProviderType, entryPointVersion, kernelVersion, }: {
        smartWalletAddress: string;
        eoaAddress: string;
        eoaConnector: WalletConnectorBase;
        shouldSetEoaConnector?: boolean;
        ecdsaProviderType?: EcdsaValidatorOptions;
        entryPointVersion?: ProviderEntryPointVersionEnum;
        kernelVersion?: ProviderKernelVersionEnum;
    }): Promise<void>;
};
export interface IAccountAbstractionWalletConnector extends WalletConnectorBase {
    canSponsorTransactionGas(transaction: {
        from?: string;
        to?: string;
        value?: bigint;
        data?: string;
    }): Promise<boolean>;
    disableGasSponsorshipOnce(): void;
    eoaAddress: string | undefined;
    enableEIP7702Mode: boolean;
    getAccountAbstractionProvider(props?: GetAccountAbstractionProviderProps): any;
    /**
     * @deprecated You should get the EOA connector by passing the SCW wallet to getEOAConnector,
     * from the useSmartWallet hook
     */
    getEOAConnector(): WalletConnector | undefined;
    initialize(params: {
        smartWalletAddress: string;
        eoaAddress: string;
        eoaConnector: InternalWalletConnector;
        shouldSetEoaConnector?: boolean;
        properties?: SmartWalletProperties;
    }): Promise<void>;
}
export {};
