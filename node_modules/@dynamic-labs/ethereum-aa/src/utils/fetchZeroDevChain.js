'use client'
import { __awaiter } from '../../_virtual/_tslib.js';
import { chainsMap } from '@dynamic-labs/ethereum-core';
import { logger } from './logger.js';

const CACHED_CHAIN_ID_KEY = 'dynamic_zd_chain_id';
const getCachedChainIdKey = (projectId) => `${CACHED_CHAIN_ID_KEY}-${projectId}`;
const fetchZeroDevChain = (projectId) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const cacheKey = getCachedChainIdKey(projectId);
        const cachedChainId = localStorage.getItem(cacheKey);
        if (cachedChainId) {
            return chainsMap[cachedChainId];
        }
        const response = yield (yield fetch(`https://prod-api.zerodev.app/projects/${projectId}`)).json();
        localStorage.setItem(cacheKey, response.chainId);
        return chainsMap[response.chainId];
    }
    catch (err) {
        logger.error('Failed to fetch ZeroDev project settings from ZeroDev API ' +
            'This is needed to fetch the chain id so that we know which chain the smart contract is on');
        throw err;
    }
});

export { fetchZeroDevChain, getCachedChainIdKey };
